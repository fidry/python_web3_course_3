Урок 3, домашнее задание 2 - Неверифицированные контракты на примере zkSync (part 2)

В этом уроке мы разберёмся как работать с неверифицированными контрактами, поработаем с площадкой Koi Finance, SyncSwap и Maverick.

Наши задания:
- задание №1**: сделать скрипт на следующие cвапы в сети zkSync на площадке KoiFinance (https://dapp.koi.finance/swap):
swap_eth_to_usdc (отличается от той, что в видеоуроке)
Пример:
(0.001 ETH -> 3.113 USDC): https://era.zksync.network/tx/0x293462efd1b0ca29fc731e84d868eb0589506b1b4c332b374b5bb9ca5e2a0c81

- задание №2**: сделать скрипт на cвапы в сети zkSync на площадке Maverick (https://app.mav.xyz/?chain=324):
swap_usdc_to_eth
swap_usdc_to_mav
Функции должны иметь флаг is_all_balance, который будет использовать весь баланс на счету для обмена. 
Примеры: 
(6.68 USDC -> 0.00212 ETH): https://explorer.zksync.io/tx/0x802636e2f48fecc239882252b5437fe1e62cd1c0044b3ef3c30e172a91e99f81
(4.5 USDC -> 28.48 MAV): https://explorer.zksync.io/tx/0x5dc17f0cfd6dda8a1522963e2f9ea0537060ba7a03535d40771eea12559586e1

- задание №3**: сделать скрипт на cвапы в сети zkSync на площадке SyncSwap (https://syncswap.xyz/):
swap_usdc_to_eth
Функции должны иметь флаг is_all_balance, который будет использовать весь баланс на счету для обмена.
Примеры:
(1.600079 USDC.e -> 0.000492 ETH): https://explorer.zksync.io/tx/0x37287fa8108c897938d89f4a40755fb8840d3c502ed13627c007d564f9edf624

Внимание!
Все транзакции тестировать на малых суммах, потому что при неправильно составленном пути может быть потеряна часть токенов.
Как, например, в этом случае: https://era.zksync.network/tx/0x412d7c487570013a8f5e2b4f2a8ffb939ba049b5ef5e8dfde412899d7353ad35
(я просто отправил 3 бакса на контракт :))


Подсказка к заданиям: 
сделать функцию для парсинга данных из tx, чтобы автоматически за вас разбивал строку на 64 символа и выводил красиво в консоль. 
Желательно сбоку добавить hex-нумерацию по типу:
000: 000000000000000000000000...00000000000020
020: 000000000000000000000000...00000000000002
сигнатура функций как обычно: async def swap_eth_to_usdc(self, token_amount, slippage, is_all_balance(?))